{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/models/product.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","main","message","console","log","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Product","$resource","id","update","method","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","get","params","delete","UsersEditController","usersEdit","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth','$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Product', Product);\n\nProduct.$inject = ['$resource', 'API_URL'];\nfunction Product($resource, API_URL) {\n  return new $resource(`${API_URL}/products/:id`, { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User','$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User','$state', '$auth'];\nfunction UsersEditController(User, $state, $auth) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    User.update({id: usersEdit.user.id}, usersEdit.user, () => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  usersEdit.update = update;\n  usersEdit.isLoggedIn = $auth.isAuthenticated;\n}\n"]}