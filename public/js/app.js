"use strict";function Auth(r,e){r.loginUrl=e+"/login",r.signupUrl=e+"/register",r.tokenPrefix=""}function RegisterController(r,e){function t(){r.signup(o.user).then(function(){e.go("login")})}var o=this;o.user={},o.submit=t}function LoginController(r,e){function t(){r.login(o.credentials).then(function(){e.go("usersIndex")})}var o=this;o.credentials={},o.submit=t}function MainController(r,e,t){function o(){r.logout().then(function(){e.go("usersIndex")})}function l(t,o){n.message=null,!r.isAuthenticated()&&s.includes(o.name)&&(t.preventDefault(),e.go("login"),n.message="You must be logged in to go there!"),r.isAuthenticated()&&(n.isSeller="seller"===r.getPayload().role)}var n=this;n.isLoggedIn=r.isAuthenticated,n.message=null;var s=["usersEdit"];t.$on("$stateChangeStart",l),n.logout=o}function Order(r,e){return new r(e+"/orders/:id",{id:"@_id"},{update:{method:"PUT"}})}function OrdersIndexController(r){var e=this;e.all=r.query()}function OrdersNewController(r,e,t){function o(){var o=t.getPayload();console.log("fired"),console.log(o),r.save(n.order,function(){e.go("ordersShow")})}function l(){console.log("give me some cheese!")}var n=this;n.order={},n.order.product_id=e.params.id,n.create=o,n.addOrder=l}function OrdersShowController(r,e,t){function o(){console.log("fired!"),l.order.$remove({id:l.order.id},function(){e.go("ordersIndex")})}var l=this,n=t.getPayload(),s=n.id;console.log(s),l.Order=r.get(e.params),l.delete=o,l.isLoggedIn=t.isAuthenticated}function Product(r,e){return new r(e+"/products/:id",{id:"@_id"},{update:{method:"PUT"}})}function ProductsIndexController(r){var e=this;e.all=r.query()}function ProductsNewController(r,e,t){function o(){var o=t.getPayload();console.log("fired"),console.log(o),r.save(l.product,function(){e.go("productsIndex")})}var l=this;l.product={},l.create=o}function ProductsShowController(r,e,t){function o(){console.log("fired!"),l.product.$remove({id:l.product.id},function(){e.go("productsIndex")})}var l=this,n=t.getPayload(),s=n.id;console.log(s),l.isOwnProduct=!1,r.get(e.params).$promise.then(function(r){l.product=r,console.log(l.product),l.product.seller.id===s&&(l.isOwnProduct=!0,console.log(l.product.seller.id),console.log(l.isOwnProduct))}),l.delete=o,l.isLoggedIn=t.isAuthenticated}function ProductsEditController(r,e,t){function o(){r.update({id:l.product.id},l.product,function(){e.go("productsShow",e.params)})}var l=this;l.product=r.get(e.params),l.update=o,l.isLoggedIn=t.isAuthenticated}function Router(r,e){r.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("productsIndex",{url:"/products",templateUrl:"/templates/productsIndex.html",controller:"ProductsIndexController as productsIndex"}).state("productsNew",{url:"/products/new",templateUrl:"/templates/productsNew.html",controller:"ProductsNewController as productsNew"}).state("productsShow",{url:"/products/:id",templateUrl:"/templates/productsShow.html",controller:"ProductsShowController as productsShow"}).state("productsEdit",{url:"/products/:id/edit",templateUrl:"/templates/productsEdit.html",controller:"ProductsEditController as productsEdit"}).state("ordersIndex",{url:"/orders",templateUrl:"/templates/ordersIndex.html",controller:"OrdersIndexController as ordersIndex"}).state("ordersNew",{url:"/orders/new",templateUrl:"/templates/ordersNew.html",controller:"OrdersNewController as ordersNew"}).state("ordersShow",{url:"/orders/:id",templateUrl:"/templates/ordersShow.html",controller:"OrdersShowController as ordersShow"}),e.otherwise("/users")}function User(r,e){return new r(e+"/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersIndexController(r){var e=this;e.all=r.query()}function UsersShowController(r,e,t){function o(){l.user.$remove(function(){e.go("usersIndex")})}var l=this;l.user=r.get(e.params),l.delete=o,l.isLoggedIn=t.isAuthenticated}function UsersEditController(r,e,t){function o(){r.update({id:l.user.id},l.user,function(){e.go("usersShow",e.params)})}var l=this;l.user=r.get(e.params),l.update=o,l.isLoggedIn=t.isAuthenticated}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Order",Order),Order.$inject=["$resource","API_URL"],angular.module("finalProject").controller("OrdersIndexController",OrdersIndexController).controller("OrdersNewController",OrdersNewController),OrdersIndexController.$inject=["Order"],OrdersNewController.$inject=["Order","$state","$auth"],OrdersShowController.$inject=["Order","$state","$auth"],angular.module("finalProject").factory("Product",Product),Product.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ProductsIndexController",ProductsIndexController).controller("ProductsNewController",ProductsNewController).controller("ProductsShowController",ProductsShowController).controller("ProductsEditController",ProductsEditController),ProductsIndexController.$inject=["Product"],ProductsNewController.$inject=["Product","$state","$auth"],ProductsShowController.$inject=["Product","$state","$auth"],ProductsEditController.$inject=["Product","$state","$auth"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state","$auth"];
//# sourceMappingURL=app.js.map
