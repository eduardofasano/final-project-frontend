"use strict";function Auth(e,r){e.loginUrl=r+"/login",e.signupUrl=r+"/register",e.tokenPrefix=""}function RegisterController(e,r){function t(){e.signup(o.user).then(function(){r.go("login")})}var o=this;o.user={},o.submit=t}function LoginController(e,r){function t(){e.login(o.credentials).then(function(){r.go("productsIndex")})}var o=this;o.credentials={},o.submit=t}function MainController(e,r,t){function o(){e.logout().then(function(){r.go("usersIndex")})}function l(t,o){n.message=null,!e.isAuthenticated()&&u.includes(o.name)&&(t.preventDefault(),r.go("login"),n.message="You must be logged in to go there!"),e.isAuthenticated()&&(n.isSeller="seller"===e.getPayload().role)}var n=this,s=e.getPayload(),d=s;n.user=d,n.isLoggedIn=e.isAuthenticated,n.message=null;var u=["usersEdit"];t.$on("$stateChangeStart",l),n.logout=o}function Order(e,r){return new e(r+"/orders/:id",{id:"@_id"},{update:{method:"PUT"}})}function OrdersIndexController(e,r,t,o){function l(e){r.delete({id:e.id},function(){var r=u.all.indexOf(e);u.all.splice(r,1),t.go("ordersIndex")})}function n(e){console.log("clicked"),console.log(e.id),r.update({id:e.id})}function s(e){console.log("clicked"),console.log(e),e.showOrderList=!e.showOrderList}function d(e){console.log("clicked"),e.showEditFormValue=!e.showEditFormValue}var u=this,i=o.getPayload(),c=i;u.user=c,u.showEditFormValue=!1,u.all=r.query({buyer_id:o.getPayload().id}),e.get({id:c.id}).$promise.then(function(e){u.currentUser=e}),u.showOrders=s,u.delete=l,u.updateOrder=n,u.toggleEditForm=d}function OrdersNewController(e,r){function t(){e.save(o.order,function(){r.go("ordersIndex")})}var o=this;o.order={},o.order.product_id=r.params.id,o.create=t}function Product(e,r){return new e(r+"/products/:id",{id:"@_id"},{update:{method:"PUT"}})}function ProductsIndexController(e){var r=this;r.all=e.query()}function ProductsNewController(e,r,t){function o(){var o=t.getPayload();console.log("fired"),console.log(o),e.save(l.product,function(){r.go("productsIndex")})}var l=this;l.product={},l.create=o}function ProductsShowController(e,r,t,o){function l(){console.log("fired!"),s.product.$remove({id:s.product.id},function(){t.go("productsIndex")})}function n(){r.save(s.order,function(){t.go("ordersIndex")})}var s=this,d=o.getPayload(),u=d.id;console.log(u),s.isOwnProduct=!1,e.get(t.params).$promise.then(function(e){s.product=e,console.log(s.product),s.product.seller.id===u&&(s.isOwnProduct=!0,console.log(s.product.seller.id),console.log(s.isOwnProduct))}),s.delete=l,s.isLoggedIn=o.isAuthenticated,s.order={product_id:t.params.id},s.createOrder=n}function ProductsEditController(e,r,t){function o(){e.update({id:l.product.id},l.product,function(){r.go("productsShow",r.params)})}var l=this;l.product=e.get(r.params),l.update=o,l.isLoggedIn=t.isAuthenticated}function Router(e,r){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("productsIndex",{url:"/products",templateUrl:"/templates/productsIndex.html",controller:"ProductsIndexController as productsIndex"}).state("productsNew",{url:"/products/new",templateUrl:"/templates/productsNew.html",controller:"ProductsNewController as productsNew"}).state("productsShow",{url:"/products/:id",templateUrl:"/templates/productsShow.html",controller:"ProductsShowController as productsShow"}).state("productsEdit",{url:"/products/:id/edit",templateUrl:"/templates/productsEdit.html",controller:"ProductsEditController as productsEdit"}).state("ordersIndex",{url:"/orders",templateUrl:"/templates/ordersIndex.html",controller:"OrdersIndexController as ordersIndex"}).state("ordersNew",{url:"/orders/new",templateUrl:"/templates/ordersNew.html",controller:"OrdersNewController as ordersNew"}),r.otherwise("/products")}function User(e,r){return new e(r+"/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersIndexController(e){var r=this;r.all=e.query()}function UsersShowController(e,r,t){function o(){l.user.$remove(function(){r.go("productsIndex")})}var l=this;l.user=e.get(r.params),l.delete=o,l.isLoggedIn=t.isAuthenticated}function UsersEditController(e,r,t){function o(){e.update({id:l.user.id},l.user,function(){r.go("usersShow",r.params)})}var l=this;l.user=e.get(r.params),l.update=o,l.isLoggedIn=t.isAuthenticated}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Order",Order),Order.$inject=["$resource","API_URL"],angular.module("finalProject").controller("OrdersIndexController",OrdersIndexController).controller("OrdersNewController",OrdersNewController),OrdersIndexController.$inject=["User","Order","$state","$auth"],OrdersNewController.$inject=["Order","$state"],angular.module("finalProject").factory("Product",Product),Product.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ProductsIndexController",ProductsIndexController).controller("ProductsNewController",ProductsNewController).controller("ProductsShowController",ProductsShowController).controller("ProductsEditController",ProductsEditController),ProductsIndexController.$inject=["Product"],ProductsNewController.$inject=["Product","$state","$auth"],ProductsShowController.$inject=["Product","Order","$state","$auth"],ProductsEditController.$inject=["Product","$state","$auth"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state","$auth"];
//# sourceMappingURL=app.js.map
