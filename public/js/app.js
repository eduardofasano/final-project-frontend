"use strict";function Auth(r,t){r.loginUrl=t+"/login",r.signupUrl=t+"/register",r.tokenPrefix=""}function RegisterController(r,t){function e(){r.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=e}function LoginController(r,t){function e(){r.login(o.credentials).then(function(){t.go("productsIndex")})}var o=this;o.credentials={},o.submit=e}function MainController(r,t,e){function o(){r.logout().then(function(){t.go("usersIndex")})}function n(e,o){l.message=null,!r.isAuthenticated()&&u.includes(o.name)&&(e.preventDefault(),t.go("login"),l.message="You must be logged in to go there!"),r.isAuthenticated()&&(l.isSeller="seller"===r.getPayload().role)}var l=this,d=r.getPayload(),s=d;l.user=s,l.isLoggedIn=r.isAuthenticated,l.message=null;var u=["usersEdit"];e.$on("$stateChangeStart",n),l.logout=o}function Order(r,t){return new r(t+"/orders/:id",{id:"@_id"},{update:{method:"PUT"}})}function OrdersIndexController(r,t,e,o,n){function l(t){var n=t.quantity,l=t.product;console.log("Before deleted order; product.current_quantity:",l.current_quantity),console.log("orderQuantity:",n),e.delete({id:t.id},function(){var e=i.all.indexOf(t);i.all.splice(e,1),l.current_quantity-=n,r.update({id:l.id},l,function(r){console.log("After deleted order; updatedProduct.current_quantity:",r.current_quantity),o.go("ordersIndex")})})}function d(t){e.get({id:t.id}).$promise.then(function(n){i.orderId=n.id,console.log("order.originalQuantity: ",t.originalQuantity),r.get({id:t.product.id}).$promise.then(function(n){i.orderId=n.id;var l=n,d=n.current_quantity,s=n.id;console.log("originalCurrentQuantity: ",d),console.log("productId: ",s),console.log("editedOrderedQuantity: ",t.quantity),l.current_quantity=d-t.originalQuantity+t.quantity,console.log("edited current quantity",l.current_quantity),e.update({id:t.id},t,function(){r.update({id:s},l,function(r){console.log("updatedProduct.current_quantity:",r.current_quantity)}),o.go("ordersIndex")})})})}function s(r){console.log("clicked"),console.log(r),r.showOrderList=!r.showOrderList}function u(r){console.log("clicked"),r.showEditFormValue=!r.showEditFormValue}var i=this,c=n.getPayload(),a=c;i.user=a,i.showEditFormValue=!1,i.all=e.query({buyer_id:n.getPayload().id}),i.all.$promise.then(function(r){console.log("orders:",r),r.forEach(function(r){r.originalQuantity=r.quantity})}),t.get({id:a.id}).$promise.then(function(r){i.currentUser=r}),i.showOrders=s,i.delete=l,i.update=d,i.toggleEditForm=u}function OrdersNewController(r,t,e){function o(){t.save(n.order,function(){e.go("ordersIndex")})}var n=this;n.order={},n.order.product_id=e.params.id,n.create=o}function Product(r,t){return new r(t+"/products/:id",{id:"@id"},{update:{method:"PUT"}})}function ProductsIndexController(r){var t=this;t.all=r.query()}function ProductsNewController(r,t,e){function o(){var o=e.getPayload();console.log("fired"),console.log(o),r.save(n.product,function(){t.go("productsIndex")})}var n=this;n.product={},n.create=o}function ProductsShowController(r,t,e,o){function n(){console.log("fired!"),d.product.$remove({id:d.product.id},function(){e.go("productsIndex")})}function l(){t.save(d.order,function(t){d.product.current_quantity+=t.quantity,r.update({id:d.product.id},d.product,function(){e.go("ordersIndex")})})}var d=this,s=o.getPayload(),u=s.id,i=.2;console.log(u),d.isOwnProduct=!1,r.get(e.params).$promise.then(function(r){d.product=r,console.log(d.product);var t=d.product.quantity*i;d.maxOrderSize=t,d.order.quantity=t,console.log(t),d.product.seller.id===u&&(d.isOwnProduct=!0,console.log(d.product.seller.id),console.log(d.isOwnProduct))}),d.order={product_id:e.params.id},d.delete=n,d.isLoggedIn=o.isAuthenticated,d.createOrder=l}function ProductsEditController(r,t,e){function o(){r.update({id:n.product.id},n.product,function(){t.go("productsShow",t.params)})}var n=this;n.product=r.get(t.params),n.update=o,n.isLoggedIn=e.isAuthenticated}function Router(r,t){r.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("productsIndex",{url:"/products",templateUrl:"/templates/productsIndex.html",controller:"ProductsIndexController as productsIndex"}).state("productsNew",{url:"/products/new",templateUrl:"/templates/productsNew.html",controller:"ProductsNewController as productsNew"}).state("productsShow",{url:"/products/:id",templateUrl:"/templates/productsShow.html",controller:"ProductsShowController as productsShow"}).state("productsEdit",{url:"/products/:id/edit",templateUrl:"/templates/productsEdit.html",controller:"ProductsEditController as productsEdit"}).state("ordersIndex",{url:"/orders",templateUrl:"/templates/ordersIndex.html",controller:"OrdersIndexController as ordersIndex"}).state("ordersNew",{url:"/orders/new",templateUrl:"/templates/ordersNew.html",controller:"OrdersNewController as ordersNew"}),t.otherwise("/products")}function User(r,t){return new r(t+"/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UsersIndexController(r){var t=this;t.all=r.query()}function UsersShowController(r,t,e){function o(){n.user.$remove(function(){t.go("productsIndex")})}var n=this;n.user=r.get(t.params),n.delete=o,n.isLoggedIn=e.isAuthenticated}function UsersEditController(r,t,e){function o(){r.update({id:n.user.id},n.user,function(){t.go("usersShow",t.params)})}var n=this;n.user=r.get(t.params),n.update=o,n.isLoggedIn=e.isAuthenticated}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Order",Order),Order.$inject=["$resource","API_URL"],angular.module("finalProject").controller("OrdersIndexController",OrdersIndexController).controller("OrdersNewController",OrdersNewController),OrdersIndexController.$inject=["Product","User","Order","$state","$auth"],OrdersNewController.$inject=["Product","Order","$state"],angular.module("finalProject").factory("Product",Product),Product.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ProductsIndexController",ProductsIndexController).controller("ProductsNewController",ProductsNewController).controller("ProductsShowController",ProductsShowController).controller("ProductsEditController",ProductsEditController),ProductsIndexController.$inject=["Product"],ProductsNewController.$inject=["Product","$state","$auth"],ProductsShowController.$inject=["Product","Order","$state","$auth"],ProductsEditController.$inject=["Product","$state","$auth"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state","$auth"];
//# sourceMappingURL=app.js.map
